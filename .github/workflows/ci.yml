name: CI

on:
  push:
    branches: [ $default-branch, master ]
    tags:
      - '*'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  setup:
    name: Setup environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package.json') }}-${{ hashFiles('package.json') }}

      - name: Install dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: npm install

      - name: Cache libs
        uses: actions/cache@v4
        with:
          path: packages/*/lib
          key: ${{ runner.os }}-lib-${{ github.sha }}

  test:
    name: Test
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Load node_modules from cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package.json') }}-${{ hashFiles('package.json') }}

      - name: Load libs from cache
        uses: actions/cache@v4
        with:
          path: packages/*/lib
          key: ${{ runner.os }}-lib-${{ github.sha }}

      - name: Restore workspaces
        run: npm ci

      - name: Unit tests
        run: npm test -- -- --coverage
      - name: Linter
        run: npm run lint
      - name: Build packages
        run: npm run build
      - name: Script version check
        run: npm run test:es:version
      - name: Build Docusaurus website
        run: |
          cd website
          npm ci
          npm run build

  release:
    name: Test release
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        preview: ['preact', 'vanilla', 'uhtml', 'svelte']

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Load node_modules from cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package.json') }}-${{ hashFiles('package.json') }}

      - name: Load libs from cache
        uses: actions/cache@v4
        with:
          path: packages/*/lib
          key: ${{ runner.os }}-lib-${{ github.sha }}

      - name: Restore workspaces
        run: npm ci

      - name: Test release ${{ matrix.preview }}
        run: npm run test:release -- ${{ matrix.preview }}

      - name: Archive npm failure logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: npm-logs
          path: ~/.npm/_logs
          retention-days: 1

  publish:
    if: github.event_name == 'push' && contains(github.ref, '/tags/v')
    name: Publish to npm
    needs: release
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Load node_modules from cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package.json') }}-${{ hashFiles('package.json') }}

      - name: Load libs from cache
        uses: actions/cache@v4
        with:
          path: packages/*/lib
          key: ${{ runner.os }}-lib-${{ github.sha }}

      - name: Restore workspaces
        run: npm ci

      - name: Create npmrc file
        run: echo "//registry.npmjs.org/:_authToken=\${NODE_AUTH_TOKEN}" >> $HOME/.npmrc 2> /dev/null
      - run: npm run release:publish

      - name: Extract tmp current changelog
        run: node utils/extractChangelog.js

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body_path: current-changelog.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy to GitHub Pages
    needs: release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Load node_modules from cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package.json') }}-${{ hashFiles('package.json') }}

      - name: Restore workspaces
        run: npm ci

      - name: Build website
        run: |
          cd website
          npm ci
          npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: website/build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
