// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Merkur component loadScriptAssets() function should create script elements for script assets and return their sources (except lazy ones) 1`] = `
[
  {
    "addEventListener": [MockFunction],
    "async": "",
    "custom-element": "amp-fx-collection",
    "onerror": [Function],
    "onload": [Function],
    "remove": [MockFunction],
    "removeAttribute": [Function],
    "setAttribute": [Function],
    "src": "http://localhost:4444/static/es11/widget.6541af42bfa3596bb129.js",
  },
  {
    "addEventListener": [MockFunction],
    "defer": true,
    "onerror": [Function],
    "onload": [Function],
    "remove": [MockFunction],
    "removeAttribute": [Function],
    "setAttribute": [Function],
    "src": "http://localhost:4444/static/es9/undefined.6961af42bfa3596bb147.js",
  },
  {
    "addEventListener": [MockFunction],
    "defer": true,
    "onerror": [Function],
    "onload": [Function],
    "remove": [MockFunction],
    "removeAttribute": [Function],
    "setAttribute": [Function],
    "src": "http://localhost:4444/static/es9/polyfill.6961af42bfa3596bb147.js",
  },
  {
    "addEventListener": [MockFunction],
    "onerror": [MockFunction],
    "onload": [MockFunction] {
      "calls": [
        [],
      ],
      "results": [
        {
          "type": "return",
          "value": undefined,
        },
      ],
    },
    "remove": [MockFunction],
    "removeAttribute": [Function],
    "setAttribute": [Function],
    "text": "alert();",
  },
]
`;

exports[`Merkur component loadStyleAssets() function should create style elements for style assets and return their sources (except lazy ones) 1`] = `
[
  {
    "addEventListener": [MockFunction],
    "href": "http://localhost:4444/static/es11/widget.814e0cb568c7ddc0725d.css",
    "onerror": [Function],
    "onload": [Function],
    "rel": "stylesheet",
    "remove": [MockFunction],
    "removeAttribute": [Function],
    "setAttribute": [Function],
  },
  {
    "addEventListener": [MockFunction],
    "innerHTML": ".cssClass { margin-top: 5px; }",
    "onerror": [MockFunction],
    "onload": [MockFunction] {
      "calls": [
        [],
      ],
      "results": [
        {
          "type": "return",
          "value": undefined,
        },
      ],
    },
    "remove": [MockFunction],
    "removeAttribute": [Function],
    "setAttribute": [Function],
  },
]
`;
