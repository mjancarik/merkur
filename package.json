{
  "name": "merkur-monorepo",
  "description": "Merkur is library for creating micro frontend with server side rendering.",
  "devDependencies": {
    "@babel/core": "^7.11.6",
    "@babel/plugin-transform-modules-commonjs": "^7.10.4",
    "@babel/preset-env": "^7.11.5",
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-conventional": "^11.0.0",
    "@rollup/plugin-babel": "^5.2.1",
    "@rollup/plugin-node-resolve": "^9.0.0",
    "babel-eslint": "^10.1.0",
    "commitizen": "^4.2.1",
    "coveralls": "^3.1.0",
    "es-check": "^5.1.1",
    "eslint": "^7.10.0",
    "eslint-config-last": "^0.0.5",
    "eslint-config-prettier": "^6.12.0",
    "eslint-plugin-jasmine": "^4.1.1",
    "eslint-plugin-jest": "^24.1.0",
    "eslint-plugin-prettier": "^3.1.4",
    "eslint-plugin-react": "^7.21.3",
    "git-cz": "^4.7.1",
    "husky": "^4.3.0",
    "jest": "^26.5.2",
    "lerna": "^3.22.1",
    "lint-staged": "^10.4.0",
    "prettier": "^2.1.2",
    "rollup-plugin-terser": "^7.0.2",
    "to-mock": "^1.6.2"
  },
  "scripts": {
    "test": "lerna run test",
    "test:es:version": "lerna run test:es:version",
    "test:release": "utils/CIRelease.sh",
    "build": "lerna run build",
    "release": "lerna version --force-publish @merkur/create-widget",
    "release:publish": "lerna publish from-git --yes",
    "lint:cmd": "eslint -c ./.eslintrc.js --ignore-path ./.prettierignore  --no-eslintrc",
    "lint": "npm run lint:cmd -- './**/*.{mjs,cjs,js,jsx}'",
    "lint:fix": "npm run lint -- --fix",
    "stylelint:fix": "npm run stylelint -- --fix",
    "commit": "git-cz",
    "version": "node utils/bumpVersion.js && node utils/copyReadme.js && git add packages/create-widget/template/package.json && git add packages/**/README.md"
  },
  "author": "Miroslav Jancarik <miroslav.jancarik@firma.seznam.cz>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/mjancarik/merkur.git"
  },
  "bugs": {
    "url": "https://github.com/mjancarik/merkur/issues"
  },
  "lint-staged": {
    "**/*.{js,jsx}": "npm run lint:cmd"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "bash -c \"if [[ `git rev-parse --abbrev-ref HEAD` =~ ^(master|next)$ ]] ; then commitlint -E HUSKY_GIT_PARAMS ; fi\""
    }
  },
  "dependencies": {}
}
